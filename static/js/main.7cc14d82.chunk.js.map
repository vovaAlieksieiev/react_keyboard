{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","handleKeyEvent","event","setState","document","addEventListener","this","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAyB,CACvBC,IAAK,MAFT,EAaEC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEH,IAAKE,EAAMF,OAd/B,uDAKE,WACEI,SAASC,iBAAiB,QAASC,KAAKL,kBAN5C,kCASE,WACEG,SAASC,iBAAiB,QAASC,KAAKL,kBAV5C,oBAiBE,WACE,IAAQD,EAAQM,KAAKP,MAAbC,IAER,OACE,qBAAKO,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGP,EAAG,mCAAgCA,EAAhC,KAA2C,kCAvBzD,GAAyBQ,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.7cc14d82.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  key: string | null,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    key: null,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyEvent);\n  }\n\n  componentWillUnmount() {\n    document.addEventListener('keyup', this.handleKeyEvent);\n  }\n\n  handleKeyEvent = (event: KeyboardEvent) => {\n    this.setState({ key: event.key });\n  };\n\n  render() {\n    const { key } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {key ? (`The last pressed key is [${key}]`) : ('Nothing was pressed yet')}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}